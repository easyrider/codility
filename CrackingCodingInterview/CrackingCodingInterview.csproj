<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{417C6B29-BE28-4A8E-840C-EC9BBC40E67E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CrackingCodingInterview</RootNamespace>
    <AssemblyName>CrackingCodingInterview</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Chapter1\AreStringsAnagrams.cs" />
    <Compile Include="Chapter1\CheckWhetherStringsAreRotations.cs" />
    <Compile Include="Chapter1\HasStringUniqueCharactersBase.cs" />
    <Compile Include="Chapter1\SetRowAndColumnToZeroWhereCellIsZero.cs" />
    <Compile Include="Chapter1\HasStringUniqueCharactersWithArray.cs" />
    <Compile Include="Chapter1\HasStringUniqueCharactersWithHashSet.cs" />
    <Compile Include="Chapter1\HasStringUniqueCharactersWODataStructures.cs" />
    <Compile Include="Chapter1\RemoveDuplicateCharacters.cs" />
    <Compile Include="Chapter1\ReplaceSpacesWithHtmlCode.cs" />
    <Compile Include="Chapter1\ReverseCStyleString.cs" />
    <Compile Include="Chapter1\RotatePixelMatrix90degrees.cs" />
    <Compile Include="Chapter2\DeleteNodeInTheMiddleOfListHavingOnlyAccessToIt.cs" />
    <Compile Include="Chapter2\FindLoopInLinkedList.cs" />
    <Compile Include="Chapter2\FindNthToLast.cs" />
    <Compile Include="Chapter2\RemoveDuplicatesFromUnsortedLinkedListBase.cs" />
    <Compile Include="Chapter2\RemoveDuplicatesFromUnsortedLinkedListWithoutDataStructure.cs" />
    <Compile Include="Chapter2\RemoveDuplicatesFromUnsortedLinkedListWithDataStructure.cs" />
    <Compile Include="Chapter2\SumTwoLinkedList.cs" />
    <Compile Include="Chapter3\HanoiTower.cs" />
    <Compile Include="Chapter3\IStack.cs" />
    <Compile Include="Chapter3\IStackWithMin.cs" />
    <Compile Include="Chapter3\QueueBasedOnTwoStacks.cs" />
    <Compile Include="Chapter3\SetOfStacks.cs" />
    <Compile Include="Chapter3\SortStackAscOrder.cs" />
    <Compile Include="Chapter3\StackWithMinKeptInStack.cs" />
    <Compile Include="Chapter3\StackWithMinKeptInNode.cs" />
    <Compile Include="Chapter4\FindCommonAncestor.cs" />
    <Compile Include="Chapter4\FindInOrderSuccessorOfBinarySearchTree.cs" />
    <Compile Include="Chapter4\FindSumPathsInTree.cs" />
    <Compile Include="Chapter4\GetListsOfNodesPerLevelOfTree.cs" />
    <Compile Include="Chapter4\CreateTreeWithMinHeightFromAscOrderAlgorithm.cs" />
    <Compile Include="Chapter4\IsRouteBetweenTwoNodesInDirectedGraph.cs" />
    <Compile Include="Chapter4\IsTreeBalanced.cs" />
    <Compile Include="Chapter4\IsTreeSubtreeOfAnotherTree.cs" />
    <Compile Include="Chapter5\FindMissingNumbers.cs" />
    <Compile Include="Chapter5\GetDecimalNumberBinaryRepresentation.cs" />
    <Compile Include="Chapter5\GetNextSmallerAndBiggerNumsWithSameAmountOfBits.cs" />
    <Compile Include="Chapter5\GetNumberOfBitsRequiredToConvert.cs" />
    <Compile Include="Chapter5\SetBits.cs" />
    <Compile Include="Chapter5\SwapOddAndEventBits.cs" />
    <Compile Include="Chapter8\GetFibonacciNumberIterative.cs" />
    <Compile Include="Chapter8\GetFibonacciNumberRecursive.cs" />
    <Compile Include="Chapter8\GetPermutationsOfString.cs" />
    <Compile Include="Chapter8\PaintFill.cs" />
    <Compile Include="Chapter8\ReturnAllSubsetsOfSetIterative.cs" />
    <Compile Include="Chapter8\ReturnAllSubsetsOfSetRecursive.cs" />
    <Compile Include="Chapter9\FindIndexOfElementInSortedRotatedArray.cs" />
    <Compile Include="Chapter9\FindStringInSortedInterspersedWithEmptyStringArray.cs" />
    <Compile Include="Chapter9\IsElementPresentedInSortedMatrix.cs" />
    <Compile Include="Chapter9\FindSuitablePeopleForTowerInCircus.cs" />
    <Compile Include="Chapter9\MergeTwoSortedArraysInSortedOrder.cs" />
    <Compile Include="Chapter9\SortClassWithAnagrams.cs" />
    <Compile Include="CStyleString.cs" />
    <Compile Include="CStyleStringAlgorithmBase.cs" />
    <Compile Include="Graph.cs" />
    <Compile Include="GraphNode.cs" />
    <Compile Include="GraphNodeState.cs" />
    <Compile Include="LinkedListNode.cs" />
    <Compile Include="LinkedListNodeHelpers.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ReferenceAttribute.cs" />
    <Compile Include="Algorithm.cs" />
    <Compile Include="TreeNode.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>